{"version":3,"sources":["jitsi/jitsi.component.jsx","thank-you/thank-you.component.jsx","App.js","index.js"],"names":["JitsiComponent","props","domain","api","startMeet","options","roomName","state","room","width","height","configOverwrite","prejoinPageEnabled","interfaceConfigOverwrite","parentNode","document","querySelector","userInfo","displayName","user","name","window","JitsiMeetExternalAPI","addEventListeners","readyToClose","handleClose","participantLeft","handleParticipantLeft","participantJoined","handleParticipantJoined","videoConferenceJoined","handleVideoConferenceJoined","videoConferenceLeft","handleVideoConferenceLeft","audioMuteStatusChanged","handleMuteStatus","videoMuteStatusChanged","handleVideoStatus","console","log","participant","a","getParticipants","history","push","audio","video","isAudioMuted","isVideoMuted","Promise","resolve","reject","setTimeout","getParticipantsInfo","command","this","executeCommand","setState","alert","className","id","class","onClick","aria-hidden","title","Component","ThankYouComponent","style","fontSize","textAlign","to","App","component","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3cf747af.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass JitsiComponent extends Component {\n\n    domain = 'meet.jit.si';\n    api = {};\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            room: 'bwb-bfqi-vmg',\n            user: {\n                name: 'Akash Verma'\n            },\n            isAudioMuted: false,\n            isVideoMuted: false\n        }\n    }\n\n    startMeet = () => {\n        const options = {\n            roomName: this.state.room,\n            width: '100%',\n            height: 500,\n            configOverwrite: { prejoinPageEnabled: false },\n            interfaceConfigOverwrite: {\n                // overwrite interface properties\n            },\n            parentNode: document.querySelector('#jitsi-iframe'),\n            userInfo: {\n                displayName: this.state.user.name\n            }\n        }\n        this.api = new window.JitsiMeetExternalAPI(this.domain, options);\n\n        this.api.addEventListeners({\n            readyToClose: this.handleClose,\n            participantLeft: this.handleParticipantLeft,\n            participantJoined: this.handleParticipantJoined,\n            videoConferenceJoined: this.handleVideoConferenceJoined,\n            videoConferenceLeft: this.handleVideoConferenceLeft,\n            audioMuteStatusChanged: this.handleMuteStatus,\n            videoMuteStatusChanged: this.handleVideoStatus\n        });\n    }\n\n    handleClose = () => {\n        console.log(\"handleClose\");\n    }\n\n    handleParticipantLeft = async (participant) => {\n        console.log(\"handleParticipantLeft\", participant); // { id: \"2baa184e\" }\n        const data = await this.getParticipants();\n    }\n\n    handleParticipantJoined = async (participant) => {\n        console.log(\"handleParticipantJoined\", participant); // { id: \"2baa184e\", displayName: \"Shanu Verma\", formattedDisplayName: \"Shanu Verma\" }\n        const data = await this.getParticipants();\n    }\n\n    handleVideoConferenceJoined = async (participant) => {\n        console.log(\"handleVideoConferenceJoined\", participant); // { roomName: \"bwb-bfqi-vmh\", id: \"8c35a951\", displayName: \"Akash Verma\", formattedDisplayName: \"Akash Verma (me)\"}\n        const data = await this.getParticipants();\n    }\n\n    handleVideoConferenceLeft = () => {\n        console.log(\"handleVideoConferenceLeft\");\n        return this.props.history.push('/thank-you');\n    }\n\n    handleMuteStatus = (audio) => {\n        console.log(\"handleMuteStatus\", audio); // { muted: true }\n    }\n\n    handleVideoStatus = (video) => {\n        console.log(\"handleVideoStatus\", video); // { muted: true }\n    }\n\n    getParticipants() {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve(this.api.getParticipantsInfo()); // get all participants\n            }, 500)\n        });\n    }\n\n    // custom events\n    executeCommand(command) {\n        this.api.executeCommand(command);;\n        if(command == 'hangup') {\n            return this.props.history.push('/thank-you');\n        }\n\n        if(command == 'toggleAudio') {\n            this.setState({ isAudioMuted: !this.state.isAudioMuted });\n        }\n\n        if(command == 'toggleVideo') {\n            this.setState({ isVideoMuted: !this.state.isVideoMuted });\n        }\n    }\n\n    componentDidMount() {\n        if (window.JitsiMeetExternalAPI) {\n            this.startMeet();\n        } else {\n            alert('JitsiMeetExternalAPI not loaded');\n        }\n    }\n\n    render() {\n        const { isAudioMuted, isVideoMuted } = this.state;\n        return (\n            <>\n            <header className=\"nav-bar\">\n                <p className=\"item-left heading\">Jitsi React</p>\n            </header>\n            <div id=\"jitsi-iframe\"></div>\n            <div class=\"item-center\">\n                <span>Custom Controls</span>\n            </div>\n            <div class=\"item-center\">\n                <span>&nbsp;&nbsp;</span>\n                <i onClick={ () => this.executeCommand('toggleAudio') } className={`fas fa-2x grey-color ${isAudioMuted ? 'fa-microphone-slash' : 'fa-microphone'}`} aria-hidden=\"true\" title=\"Mute / Unmute\"></i>\n                <i onClick={ () => this.executeCommand('hangup') } className=\"fas fa-phone-slash fa-2x red-color\" aria-hidden=\"true\" title=\"Leave\"></i>\n                <i onClick={ () => this.executeCommand('toggleVideo') } className={`fas fa-2x grey-color ${isVideoMuted ? 'fa-video-slash' : 'fa-video'}`} aria-hidden=\"true\" title=\"Start / Stop camera\"></i>\n                <i onClick={ () => this.executeCommand('toggleShareScreen') } className=\"fas fa-film fa-2x grey-color\" aria-hidden=\"true\" title=\"Share your screen\"></i>\n            </div>\n\n            </>\n        );\n    }\n}\n\nexport default JitsiComponent;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ThankYouComponent = () => {\n    return (\n        <>\n            <p style={{ fontSize: '40px' }}>Call Ended. Thank You</p>\n            <div style={{ textAlign: 'center' }}>\n                <Link to=\"/\">Call Again</Link>\n            </div>\n        </>\n    );\n}\n\nexport default ThankYouComponent;\n","import './App.css';\nimport './assets/css/all.min.css';\nimport './assets/css/fontawesome.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport JitsiComponent from './jitsi/jitsi.component';\nimport ThankYouComponent from './thank-you/thank-you.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Switch>\n            <Route component={ThankYouComponent} path=\"/thank-you\" />\n            <Route component={JitsiComponent} path=\"/\" exact />\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from  'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>\n    </BrowserRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}